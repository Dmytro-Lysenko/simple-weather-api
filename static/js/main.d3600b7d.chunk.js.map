{"version":3,"sources":["components/SearchForm.js","components/Weather.js","App.js","index.js","components/SearchForm.module.css","components/Weather.module.css"],"names":["SearchForm","props","searchInputRef","useRef","useState","cssClass","setcssClass","console","log","cssClasses","className","classes","form","onSubmit","event","preventDefault","enteredSearch","current","value","InputClick","type","minLength","ref","actions","Weather","apiData","container","map","city","card","image","src","icon","alt","name","temp","weather","wind","id","App","content","inputCity","error","setError","isLoaded","setIsLoaded","loadedCityes","setLoadedCityes","sortedCountry","setSortedCountry","KEY","useEffect","fetch","then","response","json","result","updatedCountryes","i","list","length","updCity","main","speed","push","message","Transition","in","timeout","state","style","margin","transition","transform","inputHandler","upd","filter","prev","setTimeout","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d3600b7d.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./SearchForm.module.css\";\n\nconst SearchForm = (props) => {\n  const searchInputRef = useRef();\n  const [cssClass, setcssClass] = useState(false);\n\n  const inputChangeHandler = (event) => {\n    event.preventDefault();\n    const enteredSearch = searchInputRef.current.value;\n    props.InputClick(enteredSearch);\n\n    setcssClass(true);\n  };\n  console.log(cssClass);\n\n  const cssClasses = [\"form\", cssClass === true ? \"formOpen\" : \"formClosed\"];\n  console.log(cssClasses);\n  return (\n    <form className={classes.form} onSubmit={inputChangeHandler}>\n      <label>Search</label>\n      <input type=\"text\" minLength=\"4\" ref={searchInputRef} />\n      <input className={classes.actions} type=\"reset\" value=\"Reset\" />\n      <button className={classes.actions}>go</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import classes from './Weather.module.css'\n\nconst Weather = ({ apiData }) => {\n  return (\n    <div className={classes.container}>\n      {apiData.map((city) => (\n        <section className={classes.card} key={city.id}>\n          <div className={classes.image}>\n            <img\n              src={`http://openweathermap.org/img/wn/${city.icon}@2x.png`}\n              alt={city.name}\n            />\n          </div>\n          <h1>{city.name}</h1>\n          <div>\n            <h1>Temperature is : {city.temp}</h1>\n          </div>\n          <h1>\n            <span>Weather is : {city.weather}</span>\n            <span>Wind speed is : {city.wind} ms</span>\n          </h1>\n          {/* <h2>Wind speed: {city.windSpeed} m/s</h2> */}\n        </section>\n      ))}\n      {/* <section>\n        <div>\n          <img src={apiData.icon} alt={apiData.name} />\n        </div>\n        <h1>{apiData.name}</h1>\n        <div>\n          <h1>{apiData.main.temp}</h1>\n          <h2>\n            <span>Temp min: {apiData.main.temp_min}</span>\n            <span>Temp max: {apiData.main.temp_max}</span>\n            <span>Feels like: {apiData.main.feels_like}</span>\n          </h2>\n        </div>\n        <h1>\n          <span>Weather is: {apiData.weather.main} description: </span>\n          <span> {apiData.weather.description}</span>\n        </h1>\n        <h2>Wind speed: {apiData.wind.speed} m/s</h2>\n      </section> */}\n    </div>\n  );\n};\n\nexport default Weather;\n","import { useState, useEffect, useRef } from \"react\";\nimport Transition from \"react-transition-group/Transition\";\nimport SearchForm from \"./components/SearchForm\";\n\nimport Weather from \"./components/Weather\";\n\n// const uyte = `api.openweathermap.org/data/2.5/weather?q=Boston&appid=155da7ad5355e7cf3b6b93017697eec2`;\n// {\n//   method: \"GET\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     body: JSON.stringify(),\n//   },\n// }\n\n// const gitAPI =\n//   \"https://gist.githubusercontent.com/cbmgit/852c2702d4342e7811c95f8ffc2f017f/raw/InsuranceCompanies.json\";\n\n// const urlTous =\n//   \"https://react-app-81b61-default-rtdb.europe-west1.firebasedatabase.app/tours.json\";\n\nconst DATA = [\n  {\n    id: \"nr4\",\n    name: \"London\",\n    icon: \"http://openweathermap.org/img/wn/04d@2x.png\",\n    main: {\n      temp: 3.59,\n      feels_like: 3.59,\n      temp_min: 0.94,\n      temp_max: 5.53,\n      pressure: 1004,\n    },\n    weather: {\n      id: 803,\n      main: \"Clouds\",\n      description: \"broken clouds\",\n      icon: \"04d\",\n    },\n\n    wind: { speed: 0.45, deg: 100, gust: 1.79 },\n  },\n  {\n    id: \"n4\",\n    name: \"Boston\",\n    icon: \"http://openweathermap.org/img/wn/04d@2x.png\",\n    main: {\n      temp: 10.59,\n      feels_like: 3.59,\n      temp_min: 0.94,\n      temp_max: 5.53,\n      pressure: 1004,\n    },\n    weather: {\n      id: 803,\n      main: \"Clouds\",\n      description: \"broken clouds\",\n      icon: \"04d\",\n    },\n\n    wind: { speed: 0.45, deg: 100, gust: 1.79 },\n  },\n];\n\nfunction App() {\n  const [inputCity, setInputCity] = useState();\n  const [error, setError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [loadedCityes, setLoadedCityes] = useState([]);\n  const [sortedCountry, setSortedCountry] = useState([]);\n  const [showBlock, setShowBlock] = useState(false);\n  const searchInputRef = useRef();\n\n  // const yur = [];\n\n  // console.log(r);\n  // const newObj = {\n  //   name: testingObj.name[0],\n  //   temp: testingObj.temp[0],\n  // };\n  // console.log(newObj);\n  // yur.push(newObj)\n  // console.log(yur);\n\n  const KEY = \"155da7ad5355e7cf3b6b93017697eec2\";\n  const openWeather = `https://api.openweathermap.org/data/2.5/weather?q=${inputCity},uk&units=metric&appid=${KEY}`;\n  const weather = `https://api.openweathermap.org/data/2.5/weather?q=London,uk&units=metric&appid=${KEY}`;\n\n  const inputChangeHandler = (e) => {\n    e.preventDefault();\n    // setIsLoaded(true);\n    // const enteredSearchInput = searchInputRef.current.value;\n    // setInputCity((prev) => {\n    //   return (prev = enteredSearchInput);\n    // });\n\n    // try {\n    //   fetch(\n    //     `https://api.openweathermap.org/data/2.5/box/city?bbox=12,32,15,37,10&appid=${KEY}`\n    //   )\n    //     .then((response) => response.json())\n    //     .then((result) => {\n    //       const updatedCountryes = [];\n    //       for (let i = 0; i < result.list.length; i++) {\n    //         // console.log(result.list[i].main.temp);\n\n    //         const updCity = {\n    //           name: result.list[i].name,\n    //           id: result.list[i].id,\n    //           temp: result.list[i].main.temp,\n    //           weather: result.list[i].weather[0].main,\n    //           icon: result.list[i].weather[0].icon,\n    //           wind: result.list[i].wind.speed,\n    //         };\n    //         updatedCountryes.push(updCity);\n    //       }\n    //       console.log(updatedCountryes);\n    //       setLoadedCityes(updatedCountryes);\n    //     });\n    // } catch (error) {\n    //   setIsLoaded(false);\n    //   setError(error);\n    // }\n    console.log(loadedCityes);\n\n    // fetch(\n    //   `https://api.openweathermap.org/data/2.5/weather?q=${enteredSearchInput},uk&units=metric&appid=${KEY}`\n    // )\n    //   .then((response) => response.json())\n    //   .then(\n    //     (result) => {\n    //       console.log(result);\n    //       // console.log(result.weather);\n    //       // console.log(result.weather[0].icon);\n    //       // console.log(result.weather.map((item) => item.icon));\n    //       if (result.length === 0) {\n    //         return;\n    //       }\n    //       const citiyes = [];\n    //       const icon = result.weather[0].icon;\n    //       console.log(icon);\n    //       const city = {\n    //         id: result.id,\n    //         icon: icon,\n    //         name: result.name,\n    //         temp: result.main.temp,\n    //         feelsLike: result.main.feels_like,\n    //         minTemp: result.main.temp_min,\n    //         maxTemp: result.main.temp_max,\n    //         weather: result.weather[0].main,\n    //         windSpeed: result.wind.speed,\n    //       };\n\n    //       citiyes.push(city);\n    //       console.log(citiyes);\n    //       setSortedCountry((prevCiti) => {\n    //         return (prevCiti = citiyes);\n    //       });\n    //     },\n    //     (error) => {\n    //       setIsLoaded(true);\n    //       setError(error);\n    //     }\n    //   );\n  };\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    try {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/box/city?bbox=12,32,15,37,10&appid=${KEY}`\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          const updatedCountryes = [];\n          for (let i = 0; i < result.list.length; i++) {\n            // console.log(result.list[i].main.temp);\n\n            const updCity = {\n              name: result.list[i].name,\n              id: result.list[i].id,\n              temp: result.list[i].main.temp,\n              weather: result.list[i].weather[0].main,\n              icon: result.list[i].weather[0].icon,\n              wind: result.list[i].wind.speed,\n            };\n            updatedCountryes.push(updCity);\n          }\n          console.log(updatedCountryes);\n          setLoadedCityes(updatedCountryes);\n        });\n    } catch (error) {\n      setIsLoaded(false);\n      setError(error);\n    }\n  }, []);\n\n  if (error) {\n    return <div>Erorr: {error.message}</div>;\n  }\n\n  let content;\n  if (sortedCountry.length === 0) {\n    content = (\n      <Transition in={isLoaded} timeout={2000}>\n        {(state) => (\n          <div\n            style={{\n              margin: \"0 auto\",\n              transition: \"all 1s ease-out\",\n              transform:\n                state === \"entering\"\n                  ? \"translateY(0)\"\n                  : \"translateY(3.5rem)\",\n            }}\n          >\n            <Weather apiData={loadedCityes} />;\n          </div>\n        )}\n      </Transition>\n    );\n  }\n  if (sortedCountry.length > 0) {\n    content = <Weather apiData={sortedCountry} />;\n  }\n\n  const inputHandler = (value) => {\n    console.log(value);\n    const upd = loadedCityes.filter((city) => city.name === value);\n    setSortedCountry(upd);\n    setIsLoaded((prev) => {\n      return (prev = true);\n    });\n    setTimeout(() => {\n      setIsLoaded(false);\n    }, 2000);\n    console.log(upd);\n  };\n\n  return (\n    <div>\n      {/* <form onSubmit={inputChangeHandler}>\n        <label>Search</label>\n        <input type=\"text\" minLength=\"4\" ref={searchInputRef} />\n        <button>go</button>\n      </form> */}\n      <Transition in={isLoaded} timeout={2000}>\n        {(state) => (\n          <div\n            style={{\n              margin: \"0 auto\",\n              transition: \"all 1s ease-in-out\",\n              transform:\n                state === \"entering\"\n                  ? \"translateY(0.5rem)\"\n                  : \"translateY(1.5rem)\",\n            }}\n          >\n            <SearchForm InputClick={inputHandler} />\n          </div>\n        )}\n      </Transition>\n\n      {/*  <Transition unmountOnExit mountOnEnter in={isLoaded} timeout={2000} >{(state) => (<div ><Weather apiData={loadedCityes} /></div)}</Transition>*/}\n      {content}\n\n      {/* <ul>\n        {items.map((item) => (\n          <li key={item.id}>\n            {item.name} {item.main.temp}\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__B2ChN\",\"formOpen\":\"SearchForm_formOpen__1FaBL\",\"formClosed\":\"SearchForm_formClosed__7h-X-\",\"actions\":\"SearchForm_actions__qg6OS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Weather_container__2Hl-s\",\"card\":\"Weather_card__13MhA\",\"image\":\"Weather_image__3wq2N\"};"],"sourceRoot":""}